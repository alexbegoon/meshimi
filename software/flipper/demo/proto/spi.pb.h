/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.7 */

#ifndef PB_SPI_PB_H_INCLUDED
#define PB_SPI_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
/* LoRa Spreading Factor */
typedef enum _LoRaSpreadingFactor {
    LoRaSpreadingFactor_SF5 = 0,
    LoRaSpreadingFactor_SF6 = 1,
    LoRaSpreadingFactor_SF7 = 2,
    LoRaSpreadingFactor_SF8 = 3,
    LoRaSpreadingFactor_SF9 = 4,
    LoRaSpreadingFactor_SF10 = 5,
    LoRaSpreadingFactor_SF11 = 6,
    LoRaSpreadingFactor_SF12 = 7
} LoRaSpreadingFactor;

/* LoRa Coding Rate */
typedef enum _LoRaCodingRate {
    LoRaCodingRate_CR_4_5 = 0,
    LoRaCodingRate_CR_4_6 = 1,
    LoRaCodingRate_CR_4_7 = 2,
    LoRaCodingRate_CR_4_8 = 3
} LoRaCodingRate;

/* LoRa Bandwidth */
typedef enum _LoRaBandwidth {
    LoRaBandwidth_BW_007 = 0,
    LoRaBandwidth_BW_010 = 1,
    LoRaBandwidth_BW_015 = 2,
    LoRaBandwidth_BW_020 = 3,
    LoRaBandwidth_BW_031 = 4,
    LoRaBandwidth_BW_041 = 5,
    LoRaBandwidth_BW_062 = 6,
    LoRaBandwidth_BW_125 = 7,
    LoRaBandwidth_BW_250 = 8,
    LoRaBandwidth_BW_500 = 9
} LoRaBandwidth;

/* LoRa Low DataRate Optimization */
typedef enum _LoRaLowDataRateOptimization {
    LoRaLowDataRateOptimization_LDRO_OFF = 0,
    LoRaLowDataRateOptimization_LDRO_ON = 1
} LoRaLowDataRateOptimization;

/* LoRa packet length enumeration */
typedef enum _LoRaPacketLengthMode {
    LoRaPacketLengthMode_EXPLICIT = 0, /* Header included in the packet */
    LoRaPacketLengthMode_IMPLICIT = 1 /* Header not included in the packet */
} LoRaPacketLengthMode;

typedef enum _SpiHeader_Status {
    SpiHeader_Status_UNKNOWN = 0,
    SpiHeader_Status_STAND_BY = 1,
    SpiHeader_Status_TX_READY = 2,
    SpiHeader_Status_RX_READY = 3,
    SpiHeader_Status_BUSY = 4,
    SpiHeader_Status_ERROR = 5
} SpiHeader_Status;

typedef enum _Response_Status_Enum {
    Response_Status_Enum_OK = 0,
    Response_Status_Enum_ERROR = 1
} Response_Status_Enum;

/* Struct definitions */
typedef PB_BYTES_ARRAY_T(512) SpiPacket_buffer_t;
typedef struct _SpiPacket {
    SpiPacket_buffer_t buffer; /* Last 4 bytes for CRC */
    uint32_t length;
} SpiPacket;

typedef struct _SpiHeader {
    SpiHeader_Status status;
    uint32_t length; /* Buffer length for upcoming TX/RX packet. */
} SpiHeader;

typedef struct _Response_Status {
    Response_Status_Enum status;
    pb_callback_t error;
} Response_Status;

typedef PB_BYTES_ARRAY_T(255) LoRaMessage_data_t;
typedef struct _LoRaMessage {
    LoRaMessage_data_t data; /* Received data */
    uint8_t size; /* The number of bytes from the Rx radio buffer */
    int8_t rssi; /* RSSI of the packet */
    int8_t snr; /* SNR of the packet */
} LoRaMessage;

typedef struct _Response_LoRaMessageReceived {
    bool has_loraMsg;
    LoRaMessage loraMsg;
} Response_LoRaMessageReceived;

/* LoRa modulation parameters */
typedef struct _LoRaModulationParams {
    LoRaSpreadingFactor sf; /* LoRa Spreading Factor */
    LoRaCodingRate cr; /* LoRa Coding Rate */
    LoRaBandwidth bw; /* LoRa Bandwidth */
    LoRaLowDataRateOptimization ldro; /* Low DataRate Optimization configuration */
} LoRaModulationParams;

/* LoRa packet parameters */
typedef struct _LoRaPacketParams {
    uint16_t preambleLenInSymbols; /* Preamble length in symbols */
    LoRaPacketLengthMode headerType; /* Header type */
    uint32_t pldLenInBytes; /* Payload length in bytes */
    bool crcIsOn; /* CRC activation */
    bool invertIqIsOn; /* IQ polarity setup */
} LoRaPacketParams;

typedef struct _Request_ConnectToNetwork {
    bool private;
    uint32_t LoRaFrequency; /* The RF frequency for future radio operations */
    bool has_modParams;
    LoRaModulationParams modParams;
    bool has_pktParams;
    LoRaPacketParams pktParams;
} Request_ConnectToNetwork;

typedef struct _Request {
    uint32_t version;
    pb_size_t which_request;
    union {
        Request_ConnectToNetwork connectToNetworkRequest;
    } request;
} Request;

typedef struct _Response_ConnectToNetwork {
    bool private;
    uint32_t LoRaFrequency;
    bool has_modParams;
    LoRaModulationParams modParams;
    bool has_pktParams;
    LoRaPacketParams pktParams;
} Response_ConnectToNetwork;

typedef struct _Response {
    uint32_t version;
    bool has_status;
    Response_Status status;
    pb_size_t which_response;
    union {
        Response_ConnectToNetwork connectToNetwork;
        Response_LoRaMessageReceived loRaMessageReceived;
    } response;
} Response;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _LoRaSpreadingFactor_MIN LoRaSpreadingFactor_SF5
#define _LoRaSpreadingFactor_MAX LoRaSpreadingFactor_SF12
#define _LoRaSpreadingFactor_ARRAYSIZE ((LoRaSpreadingFactor)(LoRaSpreadingFactor_SF12+1))

#define _LoRaCodingRate_MIN LoRaCodingRate_CR_4_5
#define _LoRaCodingRate_MAX LoRaCodingRate_CR_4_8
#define _LoRaCodingRate_ARRAYSIZE ((LoRaCodingRate)(LoRaCodingRate_CR_4_8+1))

#define _LoRaBandwidth_MIN LoRaBandwidth_BW_007
#define _LoRaBandwidth_MAX LoRaBandwidth_BW_500
#define _LoRaBandwidth_ARRAYSIZE ((LoRaBandwidth)(LoRaBandwidth_BW_500+1))

#define _LoRaLowDataRateOptimization_MIN LoRaLowDataRateOptimization_LDRO_OFF
#define _LoRaLowDataRateOptimization_MAX LoRaLowDataRateOptimization_LDRO_ON
#define _LoRaLowDataRateOptimization_ARRAYSIZE ((LoRaLowDataRateOptimization)(LoRaLowDataRateOptimization_LDRO_ON+1))

#define _LoRaPacketLengthMode_MIN LoRaPacketLengthMode_EXPLICIT
#define _LoRaPacketLengthMode_MAX LoRaPacketLengthMode_IMPLICIT
#define _LoRaPacketLengthMode_ARRAYSIZE ((LoRaPacketLengthMode)(LoRaPacketLengthMode_IMPLICIT+1))

#define _SpiHeader_Status_MIN SpiHeader_Status_UNKNOWN
#define _SpiHeader_Status_MAX SpiHeader_Status_ERROR
#define _SpiHeader_Status_ARRAYSIZE ((SpiHeader_Status)(SpiHeader_Status_ERROR+1))

#define _Response_Status_Enum_MIN Response_Status_Enum_OK
#define _Response_Status_Enum_MAX Response_Status_Enum_ERROR
#define _Response_Status_Enum_ARRAYSIZE ((Response_Status_Enum)(Response_Status_Enum_ERROR+1))


#define SpiHeader_status_ENUMTYPE SpiHeader_Status






#define Response_Status_status_ENUMTYPE Response_Status_Enum


#define LoRaModulationParams_sf_ENUMTYPE LoRaSpreadingFactor
#define LoRaModulationParams_cr_ENUMTYPE LoRaCodingRate
#define LoRaModulationParams_bw_ENUMTYPE LoRaBandwidth
#define LoRaModulationParams_ldro_ENUMTYPE LoRaLowDataRateOptimization

#define LoRaPacketParams_headerType_ENUMTYPE LoRaPacketLengthMode


/* Initializer values for message structs */
#define SpiPacket_init_default                   {{0, {0}}, 0}
#define SpiHeader_init_default                   {_SpiHeader_Status_MIN, 0}
#define Request_init_default                     {0, 0, {Request_ConnectToNetwork_init_default}}
#define Request_ConnectToNetwork_init_default    {0, 0, false, LoRaModulationParams_init_default, false, LoRaPacketParams_init_default}
#define Response_init_default                    {0, false, Response_Status_init_default, 0, {Response_ConnectToNetwork_init_default}}
#define Response_ConnectToNetwork_init_default   {0, 0, false, LoRaModulationParams_init_default, false, LoRaPacketParams_init_default}
#define Response_LoRaMessageReceived_init_default {false, LoRaMessage_init_default}
#define Response_Status_init_default             {_Response_Status_Enum_MIN, {{NULL}, NULL}}
#define LoRaMessage_init_default                 {{0, {0}}, 0, 0, 0}
#define LoRaModulationParams_init_default        {_LoRaSpreadingFactor_MIN, _LoRaCodingRate_MIN, _LoRaBandwidth_MIN, _LoRaLowDataRateOptimization_MIN}
#define LoRaPacketParams_init_default            {0, _LoRaPacketLengthMode_MIN, 0, 0, 0}
#define SpiPacket_init_zero                      {{0, {0}}, 0}
#define SpiHeader_init_zero                      {_SpiHeader_Status_MIN, 0}
#define Request_init_zero                        {0, 0, {Request_ConnectToNetwork_init_zero}}
#define Request_ConnectToNetwork_init_zero       {0, 0, false, LoRaModulationParams_init_zero, false, LoRaPacketParams_init_zero}
#define Response_init_zero                       {0, false, Response_Status_init_zero, 0, {Response_ConnectToNetwork_init_zero}}
#define Response_ConnectToNetwork_init_zero      {0, 0, false, LoRaModulationParams_init_zero, false, LoRaPacketParams_init_zero}
#define Response_LoRaMessageReceived_init_zero   {false, LoRaMessage_init_zero}
#define Response_Status_init_zero                {_Response_Status_Enum_MIN, {{NULL}, NULL}}
#define LoRaMessage_init_zero                    {{0, {0}}, 0, 0, 0}
#define LoRaModulationParams_init_zero           {_LoRaSpreadingFactor_MIN, _LoRaCodingRate_MIN, _LoRaBandwidth_MIN, _LoRaLowDataRateOptimization_MIN}
#define LoRaPacketParams_init_zero               {0, _LoRaPacketLengthMode_MIN, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define SpiPacket_buffer_tag                     1
#define SpiPacket_length_tag                     2
#define SpiHeader_status_tag                     1
#define SpiHeader_length_tag                     2
#define Response_Status_status_tag               1
#define Response_Status_error_tag                2
#define LoRaMessage_data_tag                     1
#define LoRaMessage_size_tag                     2
#define LoRaMessage_rssi_tag                     3
#define LoRaMessage_snr_tag                      4
#define Response_LoRaMessageReceived_loraMsg_tag 1
#define LoRaModulationParams_sf_tag              1
#define LoRaModulationParams_cr_tag              2
#define LoRaModulationParams_bw_tag              3
#define LoRaModulationParams_ldro_tag            4
#define LoRaPacketParams_preambleLenInSymbols_tag 1
#define LoRaPacketParams_headerType_tag          2
#define LoRaPacketParams_pldLenInBytes_tag       3
#define LoRaPacketParams_crcIsOn_tag             4
#define LoRaPacketParams_invertIqIsOn_tag        5
#define Request_ConnectToNetwork_private_tag     1
#define Request_ConnectToNetwork_LoRaFrequency_tag 2
#define Request_ConnectToNetwork_modParams_tag   3
#define Request_ConnectToNetwork_pktParams_tag   4
#define Request_version_tag                      1
#define Request_connectToNetworkRequest_tag      2
#define Response_ConnectToNetwork_private_tag    1
#define Response_ConnectToNetwork_LoRaFrequency_tag 2
#define Response_ConnectToNetwork_modParams_tag  3
#define Response_ConnectToNetwork_pktParams_tag  4
#define Response_version_tag                     1
#define Response_status_tag                      2
#define Response_connectToNetwork_tag            3
#define Response_loRaMessageReceived_tag         4

/* Struct field encoding specification for nanopb */
#define SpiPacket_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BYTES,    buffer,            1) \
X(a, STATIC,   SINGULAR, UINT32,   length,            2)
#define SpiPacket_CALLBACK NULL
#define SpiPacket_DEFAULT NULL

#define SpiHeader_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    status,            1) \
X(a, STATIC,   SINGULAR, UINT32,   length,            2)
#define SpiHeader_CALLBACK NULL
#define SpiHeader_DEFAULT NULL

#define Request_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   version,           1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (request,connectToNetworkRequest,request.connectToNetworkRequest),   2)
#define Request_CALLBACK NULL
#define Request_DEFAULT NULL
#define Request_request_connectToNetworkRequest_MSGTYPE Request_ConnectToNetwork

#define Request_ConnectToNetwork_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     private,           1) \
X(a, STATIC,   SINGULAR, UINT32,   LoRaFrequency,     2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  modParams,         3) \
X(a, STATIC,   OPTIONAL, MESSAGE,  pktParams,         4)
#define Request_ConnectToNetwork_CALLBACK NULL
#define Request_ConnectToNetwork_DEFAULT NULL
#define Request_ConnectToNetwork_modParams_MSGTYPE LoRaModulationParams
#define Request_ConnectToNetwork_pktParams_MSGTYPE LoRaPacketParams

#define Response_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   version,           1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  status,            2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (response,connectToNetwork,response.connectToNetwork),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (response,loRaMessageReceived,response.loRaMessageReceived),   4)
#define Response_CALLBACK NULL
#define Response_DEFAULT NULL
#define Response_status_MSGTYPE Response_Status
#define Response_response_connectToNetwork_MSGTYPE Response_ConnectToNetwork
#define Response_response_loRaMessageReceived_MSGTYPE Response_LoRaMessageReceived

#define Response_ConnectToNetwork_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     private,           1) \
X(a, STATIC,   SINGULAR, UINT32,   LoRaFrequency,     2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  modParams,         3) \
X(a, STATIC,   OPTIONAL, MESSAGE,  pktParams,         4)
#define Response_ConnectToNetwork_CALLBACK NULL
#define Response_ConnectToNetwork_DEFAULT NULL
#define Response_ConnectToNetwork_modParams_MSGTYPE LoRaModulationParams
#define Response_ConnectToNetwork_pktParams_MSGTYPE LoRaPacketParams

#define Response_LoRaMessageReceived_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  loraMsg,           1)
#define Response_LoRaMessageReceived_CALLBACK NULL
#define Response_LoRaMessageReceived_DEFAULT NULL
#define Response_LoRaMessageReceived_loraMsg_MSGTYPE LoRaMessage

#define Response_Status_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    status,            1) \
X(a, CALLBACK, OPTIONAL, STRING,   error,             2)
#define Response_Status_CALLBACK pb_default_field_callback
#define Response_Status_DEFAULT NULL

#define LoRaMessage_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BYTES,    data,              1) \
X(a, STATIC,   SINGULAR, UINT32,   size,              2) \
X(a, STATIC,   SINGULAR, INT32,    rssi,              3) \
X(a, STATIC,   SINGULAR, INT32,    snr,               4)
#define LoRaMessage_CALLBACK NULL
#define LoRaMessage_DEFAULT NULL

#define LoRaModulationParams_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    sf,                1) \
X(a, STATIC,   SINGULAR, UENUM,    cr,                2) \
X(a, STATIC,   SINGULAR, UENUM,    bw,                3) \
X(a, STATIC,   SINGULAR, UENUM,    ldro,              4)
#define LoRaModulationParams_CALLBACK NULL
#define LoRaModulationParams_DEFAULT NULL

#define LoRaPacketParams_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   preambleLenInSymbols,   1) \
X(a, STATIC,   SINGULAR, UENUM,    headerType,        2) \
X(a, STATIC,   SINGULAR, UINT32,   pldLenInBytes,     3) \
X(a, STATIC,   SINGULAR, BOOL,     crcIsOn,           4) \
X(a, STATIC,   SINGULAR, BOOL,     invertIqIsOn,      5)
#define LoRaPacketParams_CALLBACK NULL
#define LoRaPacketParams_DEFAULT NULL

extern const pb_msgdesc_t SpiPacket_msg;
extern const pb_msgdesc_t SpiHeader_msg;
extern const pb_msgdesc_t Request_msg;
extern const pb_msgdesc_t Request_ConnectToNetwork_msg;
extern const pb_msgdesc_t Response_msg;
extern const pb_msgdesc_t Response_ConnectToNetwork_msg;
extern const pb_msgdesc_t Response_LoRaMessageReceived_msg;
extern const pb_msgdesc_t Response_Status_msg;
extern const pb_msgdesc_t LoRaMessage_msg;
extern const pb_msgdesc_t LoRaModulationParams_msg;
extern const pb_msgdesc_t LoRaPacketParams_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define SpiPacket_fields &SpiPacket_msg
#define SpiHeader_fields &SpiHeader_msg
#define Request_fields &Request_msg
#define Request_ConnectToNetwork_fields &Request_ConnectToNetwork_msg
#define Response_fields &Response_msg
#define Response_ConnectToNetwork_fields &Response_ConnectToNetwork_msg
#define Response_LoRaMessageReceived_fields &Response_LoRaMessageReceived_msg
#define Response_Status_fields &Response_Status_msg
#define LoRaMessage_fields &LoRaMessage_msg
#define LoRaModulationParams_fields &LoRaModulationParams_msg
#define LoRaPacketParams_fields &LoRaPacketParams_msg

/* Maximum encoded size of messages (where known) */
/* Response_size depends on runtime parameters */
/* Response_Status_size depends on runtime parameters */
#define LoRaMessage_size                         283
#define LoRaModulationParams_size                8
#define LoRaPacketParams_size                    16
#define Request_ConnectToNetwork_size            36
#define Request_size                             44
#define Response_ConnectToNetwork_size           36
#define Response_LoRaMessageReceived_size        286
#define SpiHeader_size                           8
#define SpiPacket_size                           521

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
